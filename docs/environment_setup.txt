SETUP OF ENVIRONMENT
--------------------
Instruction below is for the setup on Win 10. Different versions may be used, but the following setup has been tested.
Setup will be different depending on operating system.

1. Update GPU drivers
2. Install visual studio + individual components:
	a) MSVC v142 - VS 2019 C++ x64/x86 build tools
	b) Windows 10 SDK (10.0.18362.0)
3. Download CUDA (here v11.4)
	a) install only 'Developer' and 'Runtime' modules
4. Download CuDNN v8.2.1.32 for CUDA 11.4
	a) unpack to C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\
5. Add system variables (Control panel > Edit system environment variables):
	   [NAME & PATH]
	a) INCLUDE  C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\include
	b) LIB      C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v11.4\lib\x64
6. Create Python/Anaconda environment
	a) Anaconda:
	   1. conda create -n stardistenv python=3.9
	   2. conda activate stardistenv
	       -------OR-------
	   Python:
	   1. PATH\TO\Python39\python.exe -m virtualenv stardistenv
	   2. stardistenv\Scripts\activate

	b) Install packages:
	   pip install tensorflow==2.5.* jupyter-tensorboard nodejs npm pybind11 gputools stardist numpy>=1.20 pandas pathlib tifffile scikit-tensor-py3 pyopencl
	!!! on Windows, install PyOpenCL from pre-made binary (https://www.lfd.uci.edu/~gohlke/pythonlibs/#pyopencl):
	   i.e. above, in pip install-command change pyopencl to "path\to\pyopencl.whl"